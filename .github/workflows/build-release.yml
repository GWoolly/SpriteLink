name: Build Release ZIP
on:
  push:
    tags:
      - "v*"       # Runs when you push a tag like v1.0.0
  workflow_dispatch: # Allow manual trigger from the GitHub UI

jobs:
  build-zip:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Merge utility scripts into main Lua files
        run: |
          # Create a temporary directory for processed files
          mkdir -p temp_processed
          
          # Function to merge utilities into a single file
          merge_utilities() {
            local target_file="$1"
            local temp_file="temp_processed/$(basename "$target_file")"
            
            echo "-- Merged utilities for $(basename "$target_file")" > "$temp_file"
            echo "-- Generated automatically by GitHub Actions" >> "$temp_file"
            echo "" >> "$temp_file"
            
            # Add all utility scripts at the top
            if [ -d "utilities" ]; then
              for util_file in utilities/*.lua; do
                if [ -f "$util_file" ]; then
                  echo "-- === Utility: $(basename "$util_file") ===" >> "$temp_file"
                  cat "$util_file" >> "$temp_file"
                  echo "" >> "$temp_file"
                fi
              done
            fi
            
            echo "-- === Main Script ===" >> "$temp_file"
            cat "$target_file" >> "$temp_file"
          }
          
          # Process all .lua files in the main directory (not subdirectories)
          for lua_file in *.lua; do
            if [ -f "$lua_file" ]; then
              echo "Processing $lua_file..."
              merge_utilities "$lua_file"
            fi
          done
      
      - name: Create release folder
        run: |
          RELEASE_NAME="SpriteLink"
          # mkdir "$RELEASE_NAME"
          
          # Copy everything except ignored files
          rsync -av . "$RELEASE_NAME" \
            --exclude ".git" \
            --exclude ".github" \
            --exclude ".gitignore" \
            --exclude ".gitattributes" \
            --exclude ".vscode" \
            --exclude "*.zip" \
            --exclude "*.log" \
            --exclude "*.tmp" \
            --exclude "*.bak" \
            --exclude "temp_processed" \
            --exclude "utilities"
          
          # Replace main Lua files with merged versions
          if [ -d "temp_processed" ]; then
            cp temp_processed/*.lua "$RELEASE_NAME/"
          fi
      
      - name: Create zip archive
        run: |
          zip -r SpriteLink.zip SpriteLink
      
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: SpriteLink
          path: SpriteLink.zip